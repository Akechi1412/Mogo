// width, height
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// absolute center
@mixin absoluteCenter($direction: "both") {
  position: absolute;
  @if ($direction == "left") {
    left: 50%;
    transform: translateX(-50%);
  } @else if ($direction == "top") {
    top: 50%;
    transform: translateY(-50%);
  } @else if ($direction == "both") {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

// Absolute full
@mixin absoluteFull() {
  position: absolute;
  top: 0;
  left: 0;
  @include size(100%, 100%);
}

// Background color
@mixin bgc($color: red) {
  background-color: $color;
}

// Media query max-width
@mixin maxWidth($bp) {
  @media screen and (max-width: $bp) {
    @content;
  }
}

// Media query min-width
@mixin minWidth($bp) {
  @media screen and (min-width: $bp) {
    @content;
  }
}

// Flexbox
@mixin flexbox(
  $justifyContent: flex-start,
  $alignItems: stretch,
  $direction: row,
  $wrap: nowrap,
  $flex: flex
) {
  display: $flex;
  justify-content: $justifyContent;
  align-items: $alignItems;
  flex-flow: $direction $wrap;
}

// Hide scrollbar
@mixin hideScrollbar() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

// limit line for text
@mixin textTruncate($lines: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-word;
  max-width: $size;
  white-space: pre-line;
}

@mixin ratioImage($ratio: 1) {
  position: relative;
  &::before {
    content: "";
    display: block;
    padding-top: calc(#{$ratio} * 100%);
  }
  & > img {
    @include absoluteFull();
  }
}

@mixin hoverEffect($config: ()) {
  $config: extend(
    (
      itemSelector: "",
      imgSelector: "",
      contentSelector: "",
      isAnimated: "true",
    ),
    $config
  );
  #{map-get($config, itemSelector)} {
    position: relative;
    transition: all 0.25s ease-in-out;
    will-change: transform;
    &::after {
      content: "";
      @include absoluteFull();
      @include bgc($tertiary-color);
      z-index: -1;
    }
    & > #{map-get($config, imgSelector)},
    & > #{map-get($config, contentSelector)} {
      transition: inherit;
      will-change: inherit;
    }
    & > #{map-get($config, contentSelector)} {
      @include absoluteFull();
      @include flexbox(center, center, column);
      z-index: 10;
      background: linear-gradient(
        to bottom,
        rgba($primary-color, 0.8),
        rgba($secondary-color, 0.8)
      );
      opacity: 0;
      visibility: hidden;
    }
  }
  #{map-get($config, itemSelector)}:hover {
    & > #{map-get($config, contentSelector)} {
      opacity: 1;
      visibility: visible;
    }
    @if map-get($config, isAnimated) == "true" {
      & > #{map-get($config, imgSelector)},
      & > #{map-get($config, contentSelector)} {
        transform: translate(-1rem, -1rem);
      }
    }
  }
}

@mixin grid($config: ()) {
  $config: extend(
    (
      columns: 1,
      spacingX: 0px,
      spacingY: 0px,
    ),
    $config
  );
  --spacing-x: #{map-get($config, spacingX)};
  --spacing-y: #{map-get($config, spacingY)};
  display: flex;
  flex-wrap: wrap;
  margin-left: calc(-1 * var(--spacing-x));
  margin-bottom: calc(-1 * var(--spacing-y));
  & > * {
    width: calc(100% / #{map-get($config, columns)} - var(--spacing-x));
    margin-left: var(--spacing-x);
    margin-bottom: var(--spacing-y);
  }
}

@mixin touchSlider($config: ()) {
  $config: extend(
    (
      itemWidth: 85%,
      spacingX: 0,
      paddingTop: 0,
      scrollPaddingLeft: 0,
    ),
    $config
  );
  --spacing: #{map-get($config, spacingX)};
  flex-wrap: nowrap;
  overflow-x: auto;
  margin-left: 0;
  padding-top: map-get($config, paddingTop);
  scroll-snap-type: x mandatory;
  scroll-padding-left: map-get($config, scrollPaddingLeft);
  @include hideScrollbar();
  & > * {
    width: map-get($config, itemWidth);
    flex: 0 0 auto;
    scroll-snap-stop: always;
    scroll-snap-align: start;
  }
}
